<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://kit.fontawesome.com/d11b5064a9.js" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/motion@latest/dist/motion.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
  <title>Felipe & Charlotte's Wedding!</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Bodoni+Moda:ital,opsz,wght@0,6..96,400..900;1,6..96,400..900&display=swap');
    html {
      background-color:#F9F6EE;
    }
    *{
      font-family: "Bodoni Moda", serif;
      font-optical-sizing: auto;
    }
    .footer{
      background-color:#90bd61;
      color: #F9F6EE;
    }
    .ff{
      font-family: "Bodoni Moda", serif;
      font-optical-sizing: auto;
    }
    /* Base button styles */
    .toggle-button {
      display: inline-block;
      width: 100px;
      padding: 10px;
      text-align: center;
      cursor: pointer;
      border: none;
      background-color: #d482a9;
      transition: background-color 0.3s, color 0.3s;
      font-size: 18px;
      font-weight: bold;
    }

    /* Toggle off state */
    .toggle-button.off {
      background-color:#d482a9; /* Light grey */
      color: #F9F6EE; /* Dark text */
    }

    /* Toggle on state */
    .toggle-button.on {
      background-color: #90bd61; /* Primary blue */
      color: #F9F6EE; /* White text */
    }
    .secondary{
      background-color: #a975dd;
      color: #F9F6EE;
      font-weight: bold;
    }
    
    .hold-submit-button {
      position: relative;
      overflow: hidden;
      background-color: #a975dd;
      color: #F9F6EE;
      font-weight: bold;
      border: none;
      cursor: pointer;
      user-select: none;
      touch-action: manipulation;
    }
    
    .hold-submit-button::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: var(--fill-width, 0%);
      height: 100%;
      background-color: #F9F6EE;
      color:#a975dd
      transition: width 0.1s ease-out;
      z-index: 1;
    }
    
    .hold-submit-button .button-text{
      position: relative;
      z-index: 2z;
      color: #F9F6EE;
      transition: color 0.1s ease-out;
    }
    
    
  </style>
</head>
<body class="container is-max-tablet bodoni-moda-font">
    <section class="hero">
    <div class="hero-body">
    <div class="container has-text-centered">
      <p class="title">You're invited!</p>
      <p class="subtitle">
      We'd love for you to come to our wedding</p>
    </div>
    </div>
  </section>
      <div class="container has-text-centered title">
        08.03.27
      </div>
      <div class="columns is-3 is-centered is-mobile
       has-text-centered
       has-text-weight-semibold">
      <span class="column is-italic is-underlined is-narrow">
        <span class="icon">
          <i class="fa-solid fa-wine-glass"></i>
        </span>
        18+ Only
      </span>
      <span class="column is-italic is-underlined is-narrow">
        <span class="icon">
        <i class="fa-solid fa-user-tie"></i>
      </span>
        Formal Dress
      </span>
      </div>
    </div>
    {{#if ceremony}}
      <div class="container is-fluid">
        <div class="notification secondary has-text-centered">
        Ceremony-specific information
        </div>
      </div>
    {{/if}}
      <div class="container is-fluid has-text-centered mt-4">
        Reception-specific information
      </div>
  {{#if completed}}
  <section class="hero">
    <div class="hero-body">
    <div class="container has-text-centered">
      <p class="title">Thank you for responding!</p>
      <a href="https://fcwedding.vercel.app/" target="_blank" class="is-link subtitle">Visit the main site
        for more information</p>
    </div>
  </section>
  <footer class="footer has-text-weight-semibold has-text-centered">
      I was going to add an update button but got lazy sorry.
      Set in stone now (or shoot us a text lol)
</footer>
  {{else}}
   <section class="section">
    <form action="/rsvp" method="POST">
      {{#each people}}
        <div class="card ">
          <header class="card-header">
            <p class="card-header-title">
            {{ this.first_name }} {{ this.last_name }}
            </p>
            <div class="card-header-icon">
              <span class="icon">
                <i class="fas fa-person" aria-hidden="true"></i>
              </span>
            </div>
          </header>
          <div class="card-content columns is-3">
            <div class="column is-half">
              <input class="input ff" type="text" name="requirements-{{ this.id }}" id="requirements-{{ this.id }}" placeholder="Dietary Requirements">
            </div>
            <div class="column is-half">
            <div class="select is-fullwidth">
              <select class="ff" name="food-option-{{ this.id }}">
              <option class="ff" value="" disabled selected>Food Selection</option>
              <option class="ff" value="Charlotte's Option">Charlotte's Option</option>
              <option class="ff" value="Felipe's Option">Felipe's Option</option>
            </select>
            </div>
            </div>  
          </div>
          <div class="card-footer">
          <button type="button" class="card-footer-item toggle-button off ff" data-person-id="{{ this.id }}">
          Click To Accept
          </button>
          <input type="hidden" class="rsvp-input" data-person-id="{{ this.id }}" name="rsvp-{{ this.id }}" value='Not Coming'>
          </div>
        </div>
        <br>
      {{/each}}
      {{#if plus_one_allowed}}
      <div class="card">
        <header class="card-header">
          <p class="card-header-title">
            Your +1
          </p>
        </header>
        <div class="card-content">
          <div class="columns">
            <div class="column is-one-quarter">
            <input class="input ff" type="text" name="first-name-plus-one" id="first-name-plus-one" placeholder="First Name">
          </div> 
          <div class="column is-one-quarter">
            <input class="input ff" type="text" name="last-name-plus-one" id="last-name-plus-one" placeholder="Last Name">
          </div>
          <div class="column is-one-quarter">
            <input class="input ff" type="text" name="requirements-plus-one" id="requirements-plus-one" placeholder="Requirements">
          </div> 
          <div class="column is-one-quarter">
            <div class="select is-fullwidth">
              <select class="ff" name="food-option-plus-one">
              <option class="ff" value="" disabled selected>Food Selection</option>
              <option class="ff" value="Charlotte's Option">Charlotte's Option</option>
              <option class="ff" value="Felipe's Option">Felipe's Option</option>
            </select>
            </div>
          </div>
          </div>
        </div>
      </div>
      {{/if}}
      <br>
      <button class="button is-fullwidth is-large hold-submit-button ff" type="button" id="holdSubmitBtn">
        <span class="button-text">Hold to Submit</span>
      </button> 
      <br>
      <footer class="footer has-text-weight-semibold">
      <div class="content has-text-centered">
        <p>Let us know if you want to be contacted differently moving forward</p>
        <div class="card-content columns is-1">
          <div class="column is-half">
          <input class="input ff" type="email" placeholder="Email" name="email" >
          </div>
          <div class="column is-half">
          <input class="input ff" type="text" placeholder="Phone" name="phone" >
          </div>
        </div>
          <input type="hidden" value="{{ slug }}" name="slug">
        </div>
      </footer>
    </form>
    </section>
  {{/if}}
  <script>
  document.querySelectorAll('.toggle-button').forEach((toggleButton) => {
  toggleButton.addEventListener('click', () => {
    // Get the unique person ID from the button's data attribute
    const personId = toggleButton.getAttribute('data-person-id');
    
    // Find the corresponding hidden input using the same person ID
    const toggleInput = document.querySelector(`.rsvp-input[data-person-id="${personId}"]`);

    // Toggle the button's state
    const isOn = toggleButton.classList.contains('on');
    toggleButton.classList.toggle('on', !isOn);
    toggleButton.classList.toggle('off', isOn);

    // Update the button text
    toggleButton.textContent = isOn ? 'Not Attending' : 'Attending';

    // Update the hidden input value
    toggleInput.value = isOn ? 'Not Coming' : 'Coming';
  });
});

// Hold to submit functionality
const holdSubmitBtn = document.getElementById('holdSubmitBtn');
const form = document.querySelector('form');
let holdTimer;
let isHolding = false;
let animationId;

function startHold() {
  if (isHolding) return;
  isHolding = true;
  
  // Reset fill width
  holdSubmitBtn.style.setProperty('--fill-width', '0%');
  
  // Use requestAnimationFrame for smooth fill animation
  let startTime = Date.now();
  function updateFill() {
    if (!isHolding) return;
    
    const elapsed = Date.now() - startTime;
    const progress = Math.min(elapsed / 2000, 1);
    const percentage = progress * 100;
    
    holdSubmitBtn.style.setProperty('--fill-width', `${percentage}%`);
    
    
    if (progress < 1) {
      animationId = requestAnimationFrame(updateFill);
    } else {
      // Submit the form when hold is complete
      form.submit();
    }
  }
  
  animationId = requestAnimationFrame(updateFill);
}

function endHold() {
  if (!isHolding) return;
  isHolding = false;
  
  if (animationId) {
    cancelAnimationFrame(animationId);
  }
  
  // Reset the fill with smooth transition
  holdSubmitBtn.style.transition = 'all 0.3s ease-out';
  holdSubmitBtn.style.setProperty('--fill-width', '0%');

  // Remove transition after reset
  setTimeout(() => {
    const buttonText = holdSubmitBtn.querySelector('.button-text');
  buttonText.style.color = '#F9F6EE';
  }, 200);
}

holdSubmitBtn.addEventListener('mousedown', startHold);
holdSubmitBtn.addEventListener('mouseup', endHold);
holdSubmitBtn.addEventListener('mouseleave', endHold);
holdSubmitBtn.addEventListener('touchstart', startHold);
holdSubmitBtn.addEventListener('touchend', endHold);
holdSubmitBtn.addEventListener('touchcancel', endHold);
  </script>
</body>
</html>